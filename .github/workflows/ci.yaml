name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Same as cairo-rs: https://github.com/lambdaclass/cairo-rs/blob/92a81f74a4a06636be1a32cb9886d1c9ba793050/.github/workflows/rust.yml
  build-programs:
    name: Generate Cairo traces
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Fetch from cache
      uses: actions/cache@v3
      id: cache-programs
      with:
        path: |
          proving_system/stark/cairo_programs/**/*.trace
          proving_system/stark/cairo_programs/**/*.memory
        key: traces-cache-${{ hashFiles( 'proving_system/stark/cairo_programs/**/*.cairo' ) }}
        restore-keys: traces-cache-

    # This is not pretty, but we need `make` to see the compiled programs are
    # actually newer than the sources, otherwise it will try to rebuild them
    - name: Restore timestamps
      uses: chetan/git-restore-mtime-action@v1

    - name: Python3 Build
      if: ${{ steps.cache-programs.outputs.cache-hit != 'true' }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    - name: Install cairo-lang and deps
      if: ${{ steps.cache-programs.outputs.cache-hit != 'true' }}
      run: pip install -r requirements.txt

    - name: Generate traces
      if: ${{ steps.cache-programs.outputs.cache-hit != 'true' }}
      run: make -j traces

  compile:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Run cargo check
        uses: dtolnay/rust-toolchain@stable
        with:
          command: check

      - name: Check benchmarks
        run: cargo bench --no-run

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: make clippy

  test:
    needs: build-programs
    name: Test (Ubuntu)
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Fetch program traces
        uses: actions/cache/restore@v3
        with:
          path: |
            proving_system/stark/cairo_programs/**/*.trace
            proving_system/stark/cairo_programs/**/*.memory
          key: traces-cache-${{ hashFiles( 'proving_system/stark/cairo_programs/**/*.cairo' ) }}
          fail-on-cache-miss: true

      - name: Run tests and generate code coverage
        run: cargo llvm-cov --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true

  test_macos:
    needs: build-programs
    name: Test (macOS, Apple sillicon)
    runs-on: [self-hosted, macOS]
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Fetch program traces
        uses: actions/cache/restore@v3
        with:
          path: |
            proving_system/stark/cairo_programs/**/*.trace
            proving_system/stark/cairo_programs/**/*.memory
          key: traces-cache-${{ hashFiles( 'proving_system/stark/cairo_programs/**/*.cairo' ) }}
          fail-on-cache-miss: true

      - name: Run tests
        run: cargo test -F metal

  test_nvidia:
    needs: build-programs
    name: Test (Ubuntu, NVIDIA GPU)
    runs-on: [self-hosted, cuda]
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
      
      - name: Fetch program traces
        uses: actions/cache/restore@v3
        with:
          path: |
            proving_system/stark/cairo_programs/**/*.trace
            proving_system/stark/cairo_programs/**/*.memory
          key: traces-cache-${{ hashFiles( 'proving_system/stark/cairo_programs/**/*.cairo' ) }}
          fail-on-cache-miss: true

      - name: Run tests
        run: cargo test -F cuda
